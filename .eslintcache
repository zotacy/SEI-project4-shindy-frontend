[{"/Users/zt06224/sei/projects/SEI-project4-shindy/shindy/src/index.js":"1","/Users/zt06224/sei/projects/SEI-project4-shindy/shindy/src/reportWebVitals.js":"2","/Users/zt06224/sei/projects/SEI-project4-shindy/shindy/src/components/App/App.js":"3","/Users/zt06224/sei/projects/SEI-project4-shindy/shindy/src/components/GameScreen/GameScreen.js":"4","/Users/zt06224/sei/projects/SEI-project4-shindy/shindy/src/components/Afooter/Footer.js":"5","/Users/zt06224/sei/projects/SEI-project4-shindy/shindy/src/components/PlayerLogin/Login.js":"6","/Users/zt06224/sei/projects/SEI-project4-shindy/shindy/src/components/PlayerLogin/Signup.js":"7","/Users/zt06224/sei/projects/SEI-project4-shindy/shindy/src/components/Homepage/Homepage.js":"8","/Users/zt06224/sei/projects/SEI-project4-shindy/shindy/src/components/PlayerProfile/PlayerProfile.js":"9","/Users/zt06224/sei/projects/SEI-project4-shindy/shindy/src/components/App/Aheader/Header.js":"10"},{"size":428,"mtime":1607902372974,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1607464753870,"results":"13","hashOfConfig":"12"},{"size":5197,"mtime":1608043374661,"results":"14","hashOfConfig":"12"},{"size":8002,"mtime":1607983102504,"results":"15","hashOfConfig":"12"},{"size":361,"mtime":1607918236324,"results":"16","hashOfConfig":"12"},{"size":700,"mtime":1607961797078,"results":"17","hashOfConfig":"12"},{"size":813,"mtime":1608041718608,"results":"18","hashOfConfig":"12"},{"size":482,"mtime":1607899809392,"results":"19","hashOfConfig":"12"},{"size":2720,"mtime":1607961845945,"results":"20","hashOfConfig":"12"},{"size":989,"mtime":1608043356214,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"111vp5c",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"24"},"/Users/zt06224/sei/projects/SEI-project4-shindy/shindy/src/index.js",[],["47","48"],"/Users/zt06224/sei/projects/SEI-project4-shindy/shindy/src/reportWebVitals.js",[],"/Users/zt06224/sei/projects/SEI-project4-shindy/shindy/src/components/App/App.js",[],"/Users/zt06224/sei/projects/SEI-project4-shindy/shindy/src/components/GameScreen/GameScreen.js",["49","50","51","52","53","54","55"],"import React, {Component} from 'react';\n// import {Link} from 'react-router-dom';\nimport './GameScreen.css';\n\nclass GameScreen extends Component{\n    constructor(){\n        super()\n        this.state={\n            // userChar: this.props.user.Character[0],\n            player:{\n                title:\"Player\",\n                name: \"User Knight\",\n                maxHp:100,\n                hp: 100,\n                attack: 20,\n                defense: 5,\n                recover: 10,\n                spd: 1,\n            },\n            computer:{\n                title:\"Computer\",\n                name: \"Computer Knight\",\n                maxHp:100,\n                hp: 100,\n                attack: 20,\n                defense: 5,\n                recover: 10,\n                spd: 1,\n            },\n            playerTurn: null,\n            moves:[],\n            disabled:false,\n            // currentTurn:{},\n        }\n    }\n    //Game Logic\n    playGame=()=>{\n        // alert(\"Battle Begin!\")\n        console.log(\"Battle Begin!\")\n        let player= this.state.player;\n        let computer= this.state.computer; \n        let moves = this.state.moves;\n        this.setState({disabled: false})\n        // First Turn\n        if (player.spd === computer.spd && moves.length==0){\n            console.log('speeds match, moves 0')\n            let x=Math.floor(Math.random()*2)\n            if (x===0) {\n                this.setState({playerTurn: false})\n            }\n            else {\n                this.setState({playerTurn: true})\n            }\n        }\n        // this.nextTurn()\n        console.log(\"called\")\n    }\n    \n    // Game Methods\n    attack=()=>{\n        if (this.state.playerTurn === true){\n            let compObj= this.state.computer\n            compObj.hp = compObj.hp - this.state.player.attack\n            this.setState({computer: compObj});\n\n            let action =`You dealt ${this.state.player.attack} damage`\n            console.log(action)\n            this.setState({moves: [...this.state.moves, action]})\n            this.winLogic()\n        } else if(this.state.playerTurn === false){\n            let playerObj= this.state.player\n            playerObj.hp = playerObj.hp - this.state.computer.attack\n            this.setState({player: playerObj});\n\n            let action=`You took ${this.state.computer.attack} damage`\n            console.log(action)\n            this.setState({moves: [...this.state.moves, action]})\n            this.winLogic()\n        }\n    }\n    block=()=>{\n        if (this.state.playerTurn === true){\n            let action=`You've prepared for an attack`\n            console.log(action)\n            this.setState({moves: [...this.state.moves, action]})\n            this.winLogic()\n        } else {\n            let action=`Opponent blocked some of your damage`\n            console.log(action)\n            this.setState({moves: [...this.state.moves, action]})\n            this.winLogic()\n        }\n    }\n    recover=()=>{\n        if(this.state.playerTurn === true){\n            let playerObj= this.state.player\n            playerObj.hp = playerObj.hp + this.state.player.recover\n            this.setState({player: playerObj});\n\n            let action=`You recovered ${this.state.player.recover} hp`\n            console.log(action)\n            this.setState({moves: [...this.state.moves, action]})\n            this.winLogic()\n        } else if (this.state.playerTurn === false){\n            let compObj= this.state.computer\n            compObj.hp = compObj.hp + this.state.computer.recover\n            this.setState({computer: compObj});\n\n            let action =`Your opponent is looking healthier`\n            console.log(action)\n            this.setState({moves: [...this.state.moves, action]})\n            this.winLogic()\n        }\n    }\n    trickery=()=>{\n        const trickStats= ['hp','attack','defense','recover','spd'];\n        let trickStat= trickStats[Math.floor(Math.random()*trickStats.length)]\n        if (this.state.playerTurn === true){\n            let action=`You performed some trickery... ${trickStat} increased`\n            console.log(action)\n            this.setState({moves: [...this.state.moves, action]})\n            this.winLogic()\n        } else {\n            let action=`Your opponent is getting into some mischief`\n            console.log(action)\n            this.setState({moves: [...this.state.moves, action]})\n            this.winLogic()\n        }\n    }\n    updateHp=()=>{\n        console.log(`${this.state.title}`)\n    }\n    nextTurn=()=>{ \n        let player= this.state.player;\n        let computer= this.state.computer; \n        let moves = this.state.moves;\n        if (this.state.playerTurn === false){\n            // console.log(`Comp's turn`)\n            // this.state.disabled=true;\n            // let compActions = [this.attack(),this.block(),this.recover(),this.trickery()]\n            // let compAction = compActions[Math.floor(Math.random() * compActions.length)]\n            // console.log(compAction)\n            this.setState({playerTurn: !this.state.playerTurn})\n        } else if (this.state.playerTurn === true){\n            // console.log(`Player's Turn`)\n            // this.state.disabled=false;\n            this.setState({playerTurn: !this.state.playerTurn})\n        }\n        // (player.spd > computer.spd) && (moves[moves.length-1]=='comp' || moves[moves.length-1]==null)){\n    }\n    winLogic=()=>{\n        if (this.state.player.hp == 0){\n            alert(\"You have been defeated\")\n            this.setState({disabled: true})\n        } else if (this.state.computer.hp == 0){\n            alert(\"You are Victorious!\")\n            this.setState({disabled: true})\n        } else {\n            this.nextTurn()\n        }\n    }\n    // Render Game Screen\n    render(){\n        let player= this.state.player;\n        let computer= this.state.computer; \n        let currentTurn= this.currentTurn;\n        // this.nextTurn()\n        console.log(this.state)\n        // console.log(this.state.turn)\n        return(\n            <main>\n                {/* <!-- Player --> */}\n                <div className=\"playerbox\" id=\"player1\">\n                    <div className=\"char\" >\n                        <h2>{player.title}</h2>\n                        <div className=\"hpBar\" hp={this.state.player.hp} maxhp={this.state.player.maxHp}></div>\n                    </div>\n                    <div className=\"actionbox\">\n                        <button className=\"action\" id=\"attack\" onClick={this.attack} disabled={this.state.disabled}>Attack!</button>\n                        <button className=\"action\" id=\"defend\" onClick={this.block} disabled={this.state.disabled}>Block</button>\n                        <button className=\"action\" id=\"recover\" onClick={this.recover} disabled={this.state.disabled}>Recover</button>\n                        <button className=\"action\" id=\"trick\" onClick={this.trickery} disabled={this.state.disabled}>Trickery</button>\n                    </div>\n                </div>\n                    {/* <!-- Middle Space --> */}\n                <div className=\"middle-space\">\n                    <h1 id=\"play\" onClick={this.playGame}>Play</h1>\n                </div>\n                {/* <!-- Computer --> */}\n                <div className=\"playerbox\" id=\"playerC\">\n                    <div className=\"char\" >\n                        <h2>{computer.title}</h2>\n                        <div className=\"hpBar\" hp={this.state.computer.hp} maxhp={this.state.computer.maxHp}></div>\n                    </div>\n                    {/* <div className=\"actionbox\" >\n                        <button className=\"action\" id=\"attack\" >Attack!</button>\n                        <button className=\"action\" id=\"defend\" >Block</button>\n                        <button className=\"action\" id=\"recover\" >Recover</button>\n                        <button className=\"action\" id=\"trick\" >Trickery</button>\n                    </div> */}\n                </div>\n            </main>\n        )\n    }\n}\n\nexport default GameScreen;",["56","57"],"/Users/zt06224/sei/projects/SEI-project4-shindy/shindy/src/components/Afooter/Footer.js",[],"/Users/zt06224/sei/projects/SEI-project4-shindy/shindy/src/components/PlayerLogin/Login.js",[],"/Users/zt06224/sei/projects/SEI-project4-shindy/shindy/src/components/PlayerLogin/Signup.js",[],"/Users/zt06224/sei/projects/SEI-project4-shindy/shindy/src/components/Homepage/Homepage.js",[],["58","59"],"/Users/zt06224/sei/projects/SEI-project4-shindy/shindy/src/components/PlayerProfile/PlayerProfile.js",[],"/Users/zt06224/sei/projects/SEI-project4-shindy/shindy/src/components/App/Aheader/Header.js",["60"],"import React, {Component} from 'react';\nimport {Link, Redirect} from 'react-router-dom';\nimport './Header.css'\n\nclass Header extends Component{\n    render(){\n        if (this.props.loggedIn === true) {\n            return(\n                <header className=\"App-header\">\n                    <Link to=\"/\"><h1 id=\"header-link\">Shindy</h1></Link>   \n                    <Link to={`/profile/${this.props.userId}`}><h3>Profile</h3></Link>\n                    <Link to={\"/\"}><button onClick={this.props.logout}>Log out</button></Link>                   \n                </header>\n            )\n        } else {\n            return(\n                <header className=\"App-header\">\n                    <Link to=\"/\"><h1 id=\"header-link\">Shindy</h1></Link>  \n                    <Link to=\"/login\"><button>Login</button></Link>\n                    <Link to=\"/signup\"><button>Signup</button></Link>                     \n                </header>\n            )\n        }\n    }\n}\n\nexport default Header;\n\n",{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":45,"column":56,"nodeType":"67","messageId":"68","endLine":45,"endColumn":58},{"ruleId":"69","severity":1,"message":"70","line":134,"column":13,"nodeType":"71","messageId":"72","endLine":134,"endColumn":19},{"ruleId":"69","severity":1,"message":"73","line":135,"column":13,"nodeType":"71","messageId":"72","endLine":135,"endColumn":21},{"ruleId":"69","severity":1,"message":"74","line":136,"column":13,"nodeType":"71","messageId":"72","endLine":136,"endColumn":18},{"ruleId":"65","severity":1,"message":"66","line":152,"column":34,"nodeType":"67","messageId":"68","endLine":152,"endColumn":36},{"ruleId":"65","severity":1,"message":"66","line":155,"column":43,"nodeType":"67","messageId":"68","endLine":155,"endColumn":45},{"ruleId":"69","severity":1,"message":"75","line":166,"column":13,"nodeType":"71","messageId":"72","endLine":166,"endColumn":24},{"ruleId":"61","replacedBy":"76"},{"ruleId":"63","replacedBy":"77"},{"ruleId":"61","replacedBy":"78"},{"ruleId":"63","replacedBy":"79"},{"ruleId":"69","severity":1,"message":"80","line":2,"column":15,"nodeType":"71","messageId":"72","endLine":2,"endColumn":23},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'player' is assigned a value but never used.","Identifier","unusedVar","'computer' is assigned a value but never used.","'moves' is assigned a value but never used.","'currentTurn' is assigned a value but never used.",["81"],["82"],["81"],["82"],"'Redirect' is defined but never used.","no-global-assign","no-unsafe-negation"]